import streamlit as st
from PIL import Image # 이미지 처리를 위해 Pillow 라이브러리가 필요합니다.

# --- 1. Streamlit 앱 설정 및 제목 ---
st.set_page_config(page_title="스마트 재활용 가이드", layout="centered")
st.title("🗑️ 스마트 재활용 가이드 앱")
st.write("쓰레기 사진을 업로드하거나 종류를 입력하시면, 올바른 재활용 방법을 알려드립니다.")

# --- 2. 재활용 정보 데이터베이스 (간단화된 예시) ---
# 이 부분은 추후 더 많은 품목과 상세한 정보를 추가하거나,
# 외부 데이터베이스 또는 API와 연동하여 확장할 수 있습니다.
# 지금은 사용자가 직접 입력할 수 있는 키워드 중심으로 구성했습니다.
recycling_rules = {
    "페트병": "내용물을 비우고 라벨을 제거한 후, 깨끗하게 헹궈 압착하여 투명 페트병 수거함에 넣어주세요. 뚜껑은 종류에 따라 분리 배출하거나 일반 쓰레기로 버립니다.",
    "종이류": "물기에 젖지 않도록 하고, 이물질(비닐 코팅, 테이프 등)은 제거 후 펴서 묶어서 배출합니다. 신문지, 책자, 종이 상자 등이 해당됩니다.",
    "플라스틱류": "내용물을 비우고 깨끗하게 헹군 후, 압착하여 플라스틱 수거함에 넣어주세요. 음식물 오염이 심한 용기(예: 배달용기)는 일반 쓰레기로 버립니다.",
    "캔류": "내용물을 비우고 헹군 후, 압착하여 캔류 수거함에 넣어주세요. 부탄가스 용기나 살충제 용기는 구멍을 뚫어 완전히 비운 후 배출합니다.",
    "유리병류": "내용물을 비우고 헹군 후, 상표 라벨은 제거하지 않아도 되며, 색깔별로 분리 배출합니다. 깨진 유리는 신문지에 싸서 일반 쓰레기로 버립니다.",
    "비닐류": "내용물을 비우고 깨끗하게 헹궈 봉투에 담아 비닐류 수거함에 넣어주세요. 과자봉지, 라면봉지 등이 포함됩니다.",
    "음식물쓰레기": "물기를 제거하고 전용 수거 용기나 봉투에 넣어 배출합니다. 일반 쓰레기와 혼합되지 않도록 주의해주세요.",
    "일반쓰레기": "재활용이 불가능하거나 다른 분류에 해당하지 않는 쓰레기는 종량제 봉투에 넣어 배출합니다.",
    "고철": "녹슬지 않은 고철은 재활용 가능합니다. 가능한 경우 압축하여 배출하세요.",
    "의류": "의류수거함에 넣거나 지자체 지정 장소에 배출합니다. 이불, 베개, 신발 등은 의류수거함에 넣지 않습니다.",
    "건전지": "가까운 주민센터 또는 아파트 내 폐건전지 수거함에 넣어주세요. 일반 쓰레기로 버리면 안 됩니다."
}

def get_recycling_info(item_type):
    """
    주어진 품목에 대한 재활용 정보를 반환하는 함수입니다.
    데이터베이스에 없는 경우 기본 메시지를 반환합니다.
    """
    return recycling_rules.get(item_type, "죄송합니다. 해당 품목에 대한 재활용 정보를 찾을 수 없습니다. 다시 정확하게 입력해주시거나, 해당 품목이 일반 쓰레기로 분류될 수 있습니다.")

# --- 3. 사용자 입력 섹션 ---

# 3.1. 사진 업로드 입력
st.header("📸 쓰레기 사진으로 검색하기")
uploaded_file = st.file_uploader("쓰레기 사진(JPG, JPEG, PNG)을 업로드해주세요.", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    # 이미지 표시
    image = Image.open(uploaded_file)
    st.image(image, caption="업로드된 사진", use_column_width=True)
    st.info("⚠️ 이미지 분석 기능은 현재 개발 중입니다. (아래 텍스트 입력 기능을 사용해주세요!)")
    
    # 💡 이미지 인식 기능에 대한 추가 설명
    # 이미지에서 쓰레기 종류를 자동으로 분류하려면,
    # 머신러닝(딥러닝) 모델(예: TensorFlow, PyTorch)을 학습시키거나
    # 외부 AI Vision API (Google Cloud Vision API, Azure Cognitive Services 등)를 연동해야 합니다.
    # 이는 초급 단계에서는 복잡할 수 있으므로, 현재는 텍스트 입력 방식이 더 실용적입니다.
    # 하지만 송현2777님의 꾸준한 학습과 탐구를 통해 충분히 도전하실 수 있는 멋진 목표가 될 것입니다!

# 3.2. 텍스트 입력
st.header("📝 쓰레기 종류를 직접 입력하기")
user_input_text = st.text_input("예: 페트병, 종이류, 플라스틱류, 캔류, 유리병류, 비닐류, 음식물쓰레기, 고철, 의류, 건전지", "")

if user_input_text:
    # 사용자의 입력을 기반으로 재활용 정보 검색
    info = get_recycling_info(user_input_text.strip()) # strip()으로 양쪽 공백 제거
    st.subheader(f"🔍 '{user_input_text}' 재활용 방법:")
    st.success(info)
    
    # 다음 검색을 위한 버튼 (선택 사항)
    if st.button("다시 검색하기"):
        st.experimental_rerun() # 앱을 새로고침하여 입력값을 초기화합니다.
